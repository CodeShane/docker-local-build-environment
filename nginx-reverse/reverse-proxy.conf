


# Setting all the prefixes is a crazy ..

server {
    listen       80;
    server_name   "" ;
    access_log on;

    # Same like external_url 'http://HOSTNAME/gitlab' in docker-compose
    location ^~/gitlab   {
       proxy_pass         http://gitlab:80;
       include /etc/nginx/conf.d/proxy-settings.conf;
    }

    # Same like ENV JENKINS_OPTS=.....--prefix=/jenkins in jenkins-fat/Jenkins-Dockerfile
   location ^~/jenkins   {
       proxy_pass        http://jenkins:8080;
       include /etc/nginx/conf.d/proxy-settings.conf;
    }

    # Same like NEXUS_CONTEXT=nexus in docker-compose
    location ^~/nexus   {
      proxy_pass         http://nexus:8081;
      include /etc/nginx/conf.d/proxy-settings.conf;
    }

  
    location ^~/regweb/   {
      proxy_pass         http://regweb:8080/regweb/;
      include /etc/nginx/conf.d/proxy-settings.conf;
    }

    # see https://portainer.readthedocs.io/en/stable/faq.html#how-can-i-configure-my-reverse-proxy-to-serve-portainer
    location ^~/portainer/   {
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_pass         http://portainer:9000/;
      include /etc/nginx/conf.d/proxy-settings.conf;
    }

    # this is for docker exec with portainer and reverse-proxy
    location ^~/portainer/api/websocket/   {
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_http_version 1.1;
      proxy_pass http://portainer:9000/api/websocket/;
      
      
      include /etc/nginx/conf.d/proxy-settings.conf;
    }
 
 
 
    # Same like sonar.web.context=/sonar in preconfig/sonar/sonar.properties
    location ^~/sonar {
       # prevent nginx to throw errors if sonar
       # is not available
       # 127.0.0.11 is the Docker DNS 
       resolver 127.0.0.11 valid=05s;
       set $sonarvm sonar;
       proxy_pass         http://$sonarvm:9000;
       include /etc/nginx/conf.d/proxy-settings.conf;
      }
    

 }
